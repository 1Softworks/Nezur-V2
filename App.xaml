<Application x:Class="NezurAimbot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NezurAimbot"
             StartupUri="Interface/Loader/Loader.xaml" >
    <Application.Resources>
        <!-- Scroll Bar Style -->
        <SolidColorBrush
		Color="Transparent"
		x:Key="ScrollBar.Static.Background" />
        <SolidColorBrush
		Color="#ffffff"
		x:Key="ScrollBar.Pressed.Glyph" />
        <SolidColorBrush
		Color="#FF7A7A96"
		x:Key="ScrollBar.MouseOver.Glyph" />
        <SolidColorBrush
		Color="#404040"
		x:Key="ScrollBar.Disabled.Glyph" />
        <SolidColorBrush
		Color="#FF191620"
		x:Key="ScrollBar.Static.Glyph" />
        <SolidColorBrush
		Color="#FF7A7A96"
		x:Key="ScrollBar.MouseOver.Background" />
        <SolidColorBrush
		Color="#FF414150"
		x:Key="ScrollBar.Pressed.Background" />
        <SolidColorBrush
		Color="#191919"
		x:Key="ScrollBar.Disabled.Background" />
        <SolidColorBrush
		Color="#60ffffff"
		x:Key="ScrollBar.Static.Thumb" />
        <SolidColorBrush
		Color="#70ffffff"
		x:Key="ScrollBar.MouseOver.Thumb" />
        <SolidColorBrush
		Color="#80ffffff"
		x:Key="ScrollBar.Pressed.Thumb" />

        <Style
		TargetType="{x:Type RepeatButton}"
		x:Key="ScrollBarButton">
            <Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
            <Setter
			Property="VerticalContentAlignment"
			Value="Center" />
            <Setter
			Property="Padding"
			Value="1" />
            <Setter
			Property="Focusable"
			Value="False" />
            <Setter
			Property="IsTabStop"
			Value="False" />
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type RepeatButton}">
                        <Border
						x:Name="border"
						SnapsToDevicePixels="True"
						Background="{StaticResource ScrollBar.Static.Background}">
                            <ContentPresenter
							x:Name="contentPresenter"
							Focusable="False"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
							Property="IsMouseOver"
							Value="True">
                                <Setter
								TargetName="border"
								Property="Background"
								Value="{StaticResource ScrollBar.MouseOver.Background}" />
                            </Trigger>
                            <Trigger
							Property="IsPressed"
							Value="True">
                                <Setter
								TargetName="border"
								Property="Background"
								Value="{StaticResource ScrollBar.Pressed.Background}" />
                            </Trigger>
                            <Trigger
							Property="IsEnabled"
							Value="False">
                                <Setter
								TargetName="contentPresenter"
								Property="Opacity"
								Value="0.56" />
                                <Setter
								TargetName="border"
								Property="Background"
								Value="{StaticResource ScrollBar.Disabled.Background}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
		TargetType="{x:Type RepeatButton}"
		x:Key="RepeatButtonTransparent">
            <Setter
			Property="OverridesDefaultStyle"
			Value="True" />
            <Setter
			Property="Background"
			Value="#00FFFFFF" />
            <Setter
			Property="Focusable"
			Value="False" />
            <Setter
			Property="IsTabStop"
			Value="False" />
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type RepeatButton}">
                        <Rectangle
						Fill="{TemplateBinding Background}"
						Height="{TemplateBinding Height}"
						Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
		TargetType="{x:Type Thumb}"
		x:Key="ScrollBarThumbVertical">
            <Setter
			Property="OverridesDefaultStyle"
			Value="True" />
            <Setter
			Property="IsTabStop"
			Value="False" />
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type Thumb}">
                        <Border
						x:Name="rectangle"
						CornerRadius="3"
						Height="{TemplateBinding Height}"
						SnapsToDevicePixels="True"
						Width="{TemplateBinding Width}"
						Background="{StaticResource ScrollBar.Static.Thumb}" />
                        <ControlTemplate.Triggers>
                            <Trigger
							Property="IsMouseOver"
							Value="True">
                                <Setter
								TargetName="rectangle"
								Property="Background"
								Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger
							Property="IsDragging"
							Value="True">
                                <Setter
								TargetName="rectangle"
								Property="Background"
								Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
		TargetType="{x:Type Thumb}"
		x:Key="ScrollBarThumbHorizontal">
            <Setter
			Property="OverridesDefaultStyle"
			Value="True" />
            <Setter
			Property="IsTabStop"
			Value="False" />
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type Thumb}">
                        <Border
						x:Name="rectangle"
						CornerRadius="3"
						Height="{TemplateBinding Height}"
						SnapsToDevicePixels="True"
						Width="{TemplateBinding Width}"
						Background="{StaticResource ScrollBar.Static.Thumb}" />
                        <ControlTemplate.Triggers>
                            <Trigger
							Property="IsMouseOver"
							Value="True">
                                <Setter
								TargetName="rectangle"
								Property="Background"
								Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger
							Property="IsDragging"
							Value="True">
                                <Setter
								TargetName="rectangle"
								Property="Background"
								Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
		TargetType="{x:Type ScrollBar}"
		x:Key="{x:Type ScrollBar}">
            <Setter
			Property="Stylus.IsPressAndHoldEnabled"
			Value="False" />
            <Setter
			Property="Stylus.IsFlicksEnabled"
			Value="False" />
            <Setter
			Property="Background"
			Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter
			Property="Foreground"
			Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
            <Setter
			Property="Width"
			Value="8" />
            <Setter
			Property="MinWidth"
			Value="8" />
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type ScrollBar}">
                        <Grid
						x:Name="Bg"
						SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition
								Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Border
							Background="{TemplateBinding Background}"
							Grid.Row="0" />
                            <Track
							x:Name="PART_Track"
							IsDirectionReversed="True"
							IsEnabled="{TemplateBinding IsMouseOver}"
							Grid.Row="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
									Command="{x:Static ScrollBar.PageUpCommand}"
									Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
									Command="{x:Static ScrollBar.PageDownCommand}"
									Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
									Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
									Value="true"
									Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition
									Value="true"
									Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
									Value="true"
									Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition
									Value="true"
									Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
									Value="true"
									Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition
									Value="false"
									Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
									Value="true"
									Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition
									Value="false"
									Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <Trigger
							Property="IsEnabled"
							Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger
				Property="Orientation"
				Value="Horizontal">
                    <Setter
					Property="Width"
					Value="Auto" />
                    <Setter
					Property="MinWidth"
					Value="0" />
                    <Setter
					Property="Height"
					Value="8" />
                    <Setter
					Property="MinHeight"
					Value="8" />
                    <Setter
					Property="Template">
                        <Setter.Value>
                            <ControlTemplate
							TargetType="{x:Type ScrollBar}">
                                <Grid
								x:Name="Bg"
								SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
										Width="0.00001*" />
                                    </Grid.ColumnDefinitions>
                                    <Border
									Background="{TemplateBinding Background}"
									Grid.Column="0" />
                                    <Track
									x:Name="PART_Track"
									Grid.Column="0"
									IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton
											Command="{x:Static ScrollBar.PageLeftCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton
											Command="{x:Static ScrollBar.PageRightCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb
											Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <Trigger
									Property="IsEnabled"
									Value="False" />
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
		TargetType="{x:Type ScrollViewer}"
		x:Key="{x:Type ScrollViewer}">
            <Setter
			Property="Template">
                <Setter.Value>
                    <ControlTemplate
					TargetType="{x:Type ScrollViewer}">
                        <Grid
						x:Name="Grid"
						Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
								Width="*" />
                                <ColumnDefinition
								Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition
								Height="*" />
                                <RowDefinition
								Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle
							x:Name="Corner"
							Grid.Column="1"
							Grid.Row="1"
							Fill="{StaticResource ScrollBar.Static.Background}" />
                            <ScrollContentPresenter
							x:Name="PART_ScrollContentPresenter"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							Grid.Row="0" />
                            <ScrollBar
							x:Name="PART_VerticalScrollBar"
							AutomationProperties.AutomationId="VerticalScrollBar"
							Cursor="Arrow"
							Grid.Column="1"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							Grid.Row="0"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar
							x:Name="PART_HorizontalScrollBar"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Grid.Column="0"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Orientation="Horizontal"
							Grid.Row="1"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Default Side Bar Button Animation Style -->
        <Style x:Key="DefaultSideBarAnimatedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#FF414150"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="#FF7A7A96"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                To="#FF414150"
                                Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Selected Side Bar Button Animation Style -->
        <Style x:Key="SelectedSideBarAnimatedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#dde6e8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="#FF7A7A96"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                    To="#dde6e8"
                                    Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- ToolTip Style -->
        <Style x:Key="ToolTipStyle" TargetType="ToolTip">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="BorderBrush" Value="#1f1f1f"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#dde6e8"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Grid Cursor="Hand">
                                <Border Width="45" Height="20" BorderBrush="#FF414150" BorderThickness="2" Background="Transparent" CornerRadius="10" Margin="5,0"/>
                                <Border x:Name="button" Height="14" Width="14" CornerRadius="12.5" HorizontalAlignment="Left" Margin="8,0,0,0"/>
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="right">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="8,0,0,0" To="32,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                            <Storyboard x:Key="left">
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="32,0,0,0" To="8,0,0,0" >
                                    <ThicknessAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#FF414150"></Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                    <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="button" Property="Background" Value="#dde6e8"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Slider Style -->
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="0" CornerRadius="2" BorderBrush="#FF0A0A0F" Background="#FF0A0A0F" Height="6"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" CornerRadius="2" Background="#FF414150"  BorderThickness="0" BorderBrush="#FF414150" Height="6"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse x:Name="Ellipse" Height="14" Width="14" Fill="#FF7A7A96" Cursor="Hand">
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                                Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                To="#dde6e8"
                                                Duration="0:0:0.2" />
                                            <!-- Change the duration as needed -->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                                Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                To="#FF7A7A96"
                                                Duration="0:0:0.2" />
                                            <!-- Change the duration as needed -->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#FF1A1A1A" />
            <Setter Property="Foreground" Value="#FF7A7A96" />
            <Setter Property="FontFamily" Value="/Assets/Fonts/#Poppins Regular" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="5" >
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#FFD94034" Offset="0"/>
                                        <GradientStop Color="#FFD94034" Offset="0.6"/>
                                        <GradientStop Color="#FFD94034" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                <Setter Property="SelectionBrush" Value="DodgerBlue" />
                                <Setter Property="CaretBrush" Value="#FF7A7A96" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Key" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="#FF979C9D"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                            To="#FFB0B6B7"
                            Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                        To="#FF979C9D"
                        Duration="0:0:0.2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
